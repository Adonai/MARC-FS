variables:
  GET_SOURCES_ATTEMPTS: "3"
  GIT_SUBMODULE_STRATEGY: "recursive"
  GIT_SSL_NO_VERIFY: "true"

stages:
#  - ubuntu build
#  - ubuntu fstest
#  - mint build
#  - mint fstest
  - fedora build
  - fedora fstest
  - arch build
  - arch fstest

.binary_artifact: &common_artifacts
  expire_in: 1 day
  paths:
    - build/marcfs

.build_script: &common_script
  - mkdir build
  - cd build
  - cmake ..
  - make -j$(nproc)
  - ./apitest

.fstest_after: &common_fstest_after
  - userdel fstest

.fstest_script: &common_fstest_script
  - su -c 'python3 fstest.py -v' - fstest

#build on ubuntu:
#  image: ubuntu
#  stage: ubuntu build
#  dependencies: []
#  before_script: &common_compile_debian
#    - apt-get update -qq && apt-get install -y -qq git cmake g++ libfuse-dev libcurl4-gnutls-dev libjsoncpp-dev
#  script: *common_script
#  artifacts: *common_artifacts

#deb package for ubuntu:
#  image: ubuntu
#  stage: ubuntu build
#  dependencies: []
#  before_script:
#    - apt-get update -qq && apt-get install -y -qq git cmake g++ libfuse-dev libcurl4-gnutls-dev libjsoncpp-dev debhelper dh-make dpkg-dev
#  script:
#    - export DEBFULLNAME="Oleg (Kanedias) Chernovskiy"
#    - export DEBEMAIL="adonai@xaker.ru"
#    - "cmake . -DBUILD_SHARED_LIBS:BOOL=OFF -DCMAKE_INSTALL_PREFIX=/usr"
#    - dh_make --packagename marcfs_0.4 --copyright gpl3 --single --createorig --yes
#    - cp README.md debian/README.Debian
#    - dpkg-buildpackage -us -uc -j$(nproc)
#    - cp ../*.deb .
#  artifacts:
#    paths:
#      - "*.deb"

#fstest on ubuntu:
#  image: ubuntu
#  stage: ubuntu fstest
#  dependencies:
#    - build on ubuntu
#  before_script: &common_test_debian
#    - apt-get update -qq && apt-get install -y -qq fuse libcurl3-gnutls libjsoncpp1 python3
#    - useradd --create-home fstest
#    - cp build/marcfs tests/fstest.py ~fstest
#    - "chown -R fstest: ~fstest"
#  after_script: *common_fstest_after
#  script: *common_fstest_script


#build on mint:
#  image: vcatechnology/linux-mint
#  stage: mint build
#  dependencies: []
#  before_script: *common_compile_debian
#  script: *common_script
#  artifacts: *common_artifacts
#
#fstest on mint:
#  image: vcatechnology/linux-mint
#  stage: mint fstest
#  dependencies:
#    - build on mint
#  before_script: *common_test_debian
#  after_script: *common_fstest_after
#  script: *common_fstest_script

build on fedora:
  image: fedora
  stage: fedora build
  dependencies: []
  before_script: 
    - yum -y install git-all cmake make gcc-c++ fuse3-devel libcurl-devel jsoncpp-devel
  script: *common_script
  artifacts: *common_artifacts
  
rpm package for fedora:
  image: fedora
  stage: fedora build
  dependencies: []
  before_script: 
    - yum -y install git-all cmake make gcc-c++ fuse3-devel libcurl-devel jsoncpp-devel jemalloc-devel rpm-build
  script:
    - version=$(grep Version fuse-marcfs.spec | grep -oP "\d.*")
    - tar --transform "s|^|fuse-marcfs-$version/|g" -cvaf fuse-marcfs-$version.tar.bz2 *
    - mkdir -pv ~/rpmbuild/{RPMS,SRPMS,BUILD,SOURCES,SPECS,tmp}
    - mv -v fuse-marcfs-$version.tar.bz2 ~/rpmbuild/SOURCES
    - rpmbuild -ba fuse-marcfs.spec
    - cp -v /root/rpmbuild/RPMS/*/*.rpm .
  artifacts:
    paths:
      - "*.rpm"

fstest on fedora:
  image: fedora
  stage: fedora fstest
  dependencies:
    - build on fedora
  before_script:
    - yum -y install fuse3 fuse3-libs libcurl jsoncpp python
    - useradd --create-home fstest
    - cp build/marcfs tests/fstest.py ~fstest
    - "chown -R fstest: ~fstest"
  after_script: *common_fstest_after
  script:
    - su -c 'export NSS_STRICT_NOFORK=DISABLED; python3 fstest.py -v' - fstest

  
build on arch:
# image: pritunl/archlinux # GPG signing errors
  image: base/archlinux
  stage: arch build
  dependencies: []
  before_script:
    - pacman -Syu --noconfirm
    - pacman -S --noconfirm git make cmake gcc fuse3 libcurl-gnutls jsoncpp
  script: *common_script
  artifacts: *common_artifacts
  
aur package for arch:
# image: pritunl/archlinux # GPG signing errors
  image: base/archlinux
  stage: arch build
  dependencies: []
  before_script:
    - pacman -Syu --noconfirm
    - pacman -S --noconfirm git make cmake gcc fuse3 libcurl-gnutls jsoncpp fakeroot
    - useradd --create-home build
    - cp PKGBUILD ~build
  script:
    - su -c 'makepkg -s' - build
    - cp -v ~build/*.tar.xz .
  artifacts:
    paths:
      - "*.tar.xz"

fstest on arch:
# image: pritunl/archlinux
  image: base/archlinux
  stage: arch fstest
  dependencies:
    - build on arch
  before_script:
    - pacman -Syu --noconfirm
    - pacman -S --noconfirm fuse3 libcurl-gnutls jsoncpp python
    - useradd --create-home fstest
    - cp build/marcfs tests/fstest.py ~fstest
    - "chown -R fstest: ~fstest"
  after_script: *common_fstest_after
  script: *common_fstest_script
